# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-05 15:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('fName', models.CharField(max_length=15)),
                ('lName', models.CharField(max_length=15)),
                ('admin', models.BooleanField(default=False)),
                ('hasApplied', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ALevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField()),
                ('dateSubmitted', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'Submitted', b'Submitted'), (b'Being Reviewed', b'Being Reviewed'), (b'Requested Interview', b'Requested Interview'), (b'Interviewed', b'Interview'), (b'Rejected', b'Rejected'), (b'Accepted', b'Accepted')], default=b'Submitted', max_length=20)),
                ('feedback', models.CharField(default=b'No feedback available', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Applications_ALevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=2)),
                ('alevelID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.ALevels')),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Applications_Employments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=30)),
                ('lengthOfEmploymentYears', models.IntegerField()),
                ('lengthOfEmploymentMonths', models.IntegerField()),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Applications_Hobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.IntegerField()),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Applications_Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expertise', models.IntegerField()),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Applications_Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expertise', models.IntegerField()),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Applications_Universities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=30)),
                ('level', models.CharField(max_length=30)),
                ('applicationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=30)),
                ('applicationID', models.ManyToManyField(through='controller.Applications_Employments', to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Hobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('applicationID', models.ManyToManyField(through='controller.Applications_Hobbies', to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=30)),
                ('applicationID', models.ManyToManyField(through='controller.Applications_Languages', to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionName', models.CharField(max_length=20)),
                ('positionDescription', models.TextField()),
                ('positionOpen', models.BooleanField(default=False)),
                ('deadlineDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skillName', models.CharField(max_length=30)),
                ('applicationID', models.ManyToManyField(through='controller.Applications_Skills', to='controller.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Universities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('applicationID', models.ManyToManyField(through='controller.Applications_Universities', to='controller.Application')),
            ],
        ),
        migrations.AddField(
            model_name='applications_universities',
            name='universityID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Universities'),
        ),
        migrations.AddField(
            model_name='applications_skills',
            name='skillID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Skills'),
        ),
        migrations.AddField(
            model_name='applications_languages',
            name='languageID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Languages'),
        ),
        migrations.AddField(
            model_name='applications_hobbies',
            name='hobbyID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Hobbies'),
        ),
        migrations.AddField(
            model_name='applications_employments',
            name='companyID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Companies'),
        ),
        migrations.AddField(
            model_name='application',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Positions'),
        ),
        migrations.AddField(
            model_name='application',
            name='users',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alevels',
            name='applicationID',
            field=models.ManyToManyField(through='controller.Applications_ALevels', to='controller.Application'),
        ),
    ]
